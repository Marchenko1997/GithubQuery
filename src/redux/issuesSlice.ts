import { createSlice, PayloadAction } from "@reduxjs/toolkit";

/**
 * üìå –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–¥–∞—á–∏ (Issue)
 */
export interface Issue {
  id: number; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏
  title: string; // –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
  number: number; // –ù–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
  user: { login: string }; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞–≤—à–∏–π –∑–∞–¥–∞—á—É
  comments: number; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –∑–∞–¥–∞—á–µ
  state: "open" | "closed"; // –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ (–æ—Ç–∫—Ä—ã—Ç–∞ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–∞)
  assignee?: { login: string } | null; // –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å (–µ—Å–ª–∏ –µ—Å—Ç—å)
}

/**
 * üìå –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
 */
export interface IssuesState {
  todo: Issue[]; // –ö–æ–ª–æ–Ω–∫–∞ "ToDo" (–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è)
  inProgress: Issue[]; // –ö–æ–ª–æ–Ω–∫–∞ "In Progress" (–∑–∞–¥–∞—á–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º)
  done: Issue[]; // –ö–æ–ª–æ–Ω–∫–∞ "Done" (–∑–∞–∫—Ä—ã—Ç—ã–µ –∑–∞–¥–∞—á–∏)
}

/**
 * üìå –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ Redux
 * –í—Å–µ —Å–ø–∏—Å–∫–∏ –∑–∞–¥–∞—á –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—É—Å—Ç—ã–µ
 */
const initialState: IssuesState = {
  todo: [],
  inProgress: [],
  done: [],
};

/**
 * üìå –°–æ–∑–¥–∞–Ω–∏–µ Redux Slice —Å —Ç—Ä–µ–º—è –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ä–µ–¥—é—Å–µ—Ä–∞–º–∏:
 * - setIssues: –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
 * - moveIssue: –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–∞–¥–∞—á –º–µ–∂–¥—É –∫–æ–ª–æ–Ω–∫–∞–º–∏
 * - reorderIssue: –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏
 */
const issuesSlice = createSlice({
  name: "issues", // –ò–º—è —Å–ª–∞–π—Å–∞ –≤ Redux-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ
  initialState, // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  reducers: {
    /**
     * üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ API –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Ö –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º:
     * - "ToDo" -> –∑–∞–¥–∞—á–∏ –±–µ–∑ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏ –≤ —Å—Ç–∞—Ç—É—Å–µ "open"
     * - "In Progress" -> –∑–∞–¥–∞—á–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –∏ –≤ —Å—Ç–∞—Ç—É—Å–µ "open"
     * - "Done" -> –≤—Å–µ –∑–∞–∫—Ä—ã—Ç—ã–µ –∑–∞–¥–∞—á–∏
     */
    setIssues: (state, action: PayloadAction<Issue[]>) => {
      state.todo = action.payload.filter(
        (issue) => !issue.assignee && issue.state === "open"
      );
      state.inProgress = action.payload.filter(
        (issue) => issue.assignee && issue.state === "open"
      );
      state.done = action.payload.filter((issue) => issue.state === "closed");
    },

    /**
     * üìå –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏ (drag-and-drop).
     * - `id` - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏
     * - `from` - –∏–∑ –∫–∞–∫–æ–π –∫–æ–ª–æ–Ω–∫–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –∑–∞–¥–∞—á–∞
     * - `to` - –≤ –∫–∞–∫—É—é –∫–æ–ª–æ–Ω–∫—É –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –∑–∞–¥–∞—á–∞
     * - `toIndex` - –∏–Ω–¥–µ–∫—Å –≤ –Ω–æ–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ, –∫—É–¥–∞ –≤—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
     */
    moveIssue: (
      state,
      action: PayloadAction<{
        id: number;
        from: keyof IssuesState;
        to: keyof IssuesState;
        toIndex: number;
      }>
    ) => {
      const { id, from, to, toIndex } = action.payload;

      // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –∑–∞–¥–∞—á–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–π –∫–æ–ª–æ–Ω–∫–µ
      const issueIndex = state[from].findIndex((issue) => issue.id === id);

      if (issueIndex !== -1) {
        // –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –∏–∑ —Å—Ç–∞—Ä–æ–π –∫–æ–ª–æ–Ω–∫–∏
        const [movedIssue] = state[from].splice(issueIndex, 1);

        // –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –Ω–æ–≤—É—é –∫–æ–ª–æ–Ω–∫—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
        state[to].splice(toIndex, 0, movedIssue);
      }
    },

    /**
     * üìå –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏ (drag-and-drop)
     * - `column` - –≤ –∫–∞–∫–æ–π –∫–æ–ª–æ–Ω–∫–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
     * - `fromIndex` - –∏—Å—Ö–æ–¥–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∑–∞–¥–∞—á–∏ –≤ –∫–æ–ª–æ–Ω–∫–µ
     * - `toIndex` - –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –∑–∞–¥–∞—á–∏ –≤ –∫–æ–ª–æ–Ω–∫–µ
     */
    reorderIssue: (
      state,
      action: PayloadAction<{
        column: keyof IssuesState;
        fromIndex: number;
        toIndex: number;
      }>
    ) => {
      const { column, fromIndex, toIndex } = action.payload;
      const columnData = state[column];

      if (fromIndex !== toIndex) {
        // –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
        const [movedIssue] = columnData.splice(fromIndex, 1);

        // –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
        columnData.splice(toIndex, 0, movedIssue);
      }
    },
  },
});

/**
 * üìå –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫—à–µ–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö:
 * - `setIssues` - –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Ö –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º
 * - `moveIssue` - –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –∑–∞–¥–∞—á–∏ –º–µ–∂–¥—É –∫–æ–ª–æ–Ω–∫–∞–º–∏
 * - `reorderIssue` - –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –∑–∞–¥–∞—á–∏ –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏
 */
export const { setIssues, moveIssue, reorderIssue } = issuesSlice.actions;

/**
 * üìå –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–¥—é—Å–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ `store.ts`
 */
export default issuesSlice.reducer;
